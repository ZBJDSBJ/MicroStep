package com.alost.microstep.data.model.database.core;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.alost.microstep.data.model.database.core.PedometerCardEntity;
import com.alost.microstep.data.model.database.core.PedometerDailyDetailEntity;
import com.alost.microstep.data.model.database.core.CalendarCardEntity;

import com.alost.microstep.data.model.database.core.PedometerCardEntityDao;
import com.alost.microstep.data.model.database.core.PedometerDailyDetailEntityDao;
import com.alost.microstep.data.model.database.core.CalendarCardEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig pedometerCardEntityDaoConfig;
    private final DaoConfig pedometerDailyDetailEntityDaoConfig;
    private final DaoConfig calendarCardEntityDaoConfig;

    private final PedometerCardEntityDao pedometerCardEntityDao;
    private final PedometerDailyDetailEntityDao pedometerDailyDetailEntityDao;
    private final CalendarCardEntityDao calendarCardEntityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        pedometerCardEntityDaoConfig = daoConfigMap.get(PedometerCardEntityDao.class).clone();
        pedometerCardEntityDaoConfig.initIdentityScope(type);

        pedometerDailyDetailEntityDaoConfig = daoConfigMap.get(PedometerDailyDetailEntityDao.class).clone();
        pedometerDailyDetailEntityDaoConfig.initIdentityScope(type);

        calendarCardEntityDaoConfig = daoConfigMap.get(CalendarCardEntityDao.class).clone();
        calendarCardEntityDaoConfig.initIdentityScope(type);

        pedometerCardEntityDao = new PedometerCardEntityDao(pedometerCardEntityDaoConfig, this);
        pedometerDailyDetailEntityDao = new PedometerDailyDetailEntityDao(pedometerDailyDetailEntityDaoConfig, this);
        calendarCardEntityDao = new CalendarCardEntityDao(calendarCardEntityDaoConfig, this);

        registerDao(PedometerCardEntity.class, pedometerCardEntityDao);
        registerDao(PedometerDailyDetailEntity.class, pedometerDailyDetailEntityDao);
        registerDao(CalendarCardEntity.class, calendarCardEntityDao);
    }
    
    public void clear() {
        pedometerCardEntityDaoConfig.getIdentityScope().clear();
        pedometerDailyDetailEntityDaoConfig.getIdentityScope().clear();
        calendarCardEntityDaoConfig.getIdentityScope().clear();
    }

    public PedometerCardEntityDao getPedometerCardEntityDao() {
        return pedometerCardEntityDao;
    }

    public PedometerDailyDetailEntityDao getPedometerDailyDetailEntityDao() {
        return pedometerDailyDetailEntityDao;
    }

    public CalendarCardEntityDao getCalendarCardEntityDao() {
        return calendarCardEntityDao;
    }

}
